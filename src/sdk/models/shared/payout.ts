/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OrderTransaction } from "./ordertransaction";
import { Expose, Type } from "class-transformer";

/**
 * The bank account used as the destination of the payout.
 */
export class PayoutDestination extends SpeakeasyBase {
    /**
     * The last digits of the bank account number associated with the payout destination.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "account_number_last_digits" })
    accountNumberLastDigits: string;

    /**
     * The bank name associated with the payout destination
     */
    @SpeakeasyMetadata()
    @Expose({ name: "bank_name" })
    bankName: string;

    /**
     * The brand associated with the payout destination.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "brand" })
    brand: string;

    /**
     * The platform specific ID of the payout destination.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "destination_id" })
    destinationId: string;

    /**
     * The last four digits of the bank account number associated with the payout destination.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "last_four" })
    lastFour: string;

    /**
     * The brand associated with the payout destination.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "routing_number" })
    routingNumber: string;
}

/**
 * The schedule associated with the payout.
 */
export enum PayoutSchedule {
    Unknown = "unknown",
    Manual = "manual",
    Automatic = "automatic",
}

/**
 * The status associated with the payout.
 */
export enum PayoutStatus {
    Paid = "paid",
    Pending = "pending",
    InTransit = "in_transit",
    Cancelled = "cancelled",
    Failed = "failed",
    Refunded = "refunded",
    Unknown = "unknown",
}

/**
 * The type associated with the payout.
 */
export enum PayoutType {
    BankAccount = "bank_account",
    Card = "card",
    Fpx = "fpx",
    Unknown = "unknown",
}

export class Payout extends SpeakeasyBase {
    /**
     * The total amount of money associated with the payout.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "amount" })
    amount: number;

    /**
     * The [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) timestamp that the payout is expected to arrive.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "arrival_at" })
    arrivalAt: string;

    /**
     * The [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) timestamp that the payout was created.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    createdAt: string;

    /**
     * The bank account used as the destination of the payout.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "destination" })
    @Type(() => PayoutDestination)
    destination?: PayoutDestination;

    /**
     * The gateway associated with the payout.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "gateway" })
    gateway: string;

    /**
     * The platform specific ID of the gateway associated with the payout..
     */
    @SpeakeasyMetadata()
    @Expose({ name: "gateway_account_id" })
    gatewayAccountId: string;

    /**
     * The Rutter generated unique ID of the payout.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    /**
     * The [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) currency code of the payout.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "iso_currency_code" })
    isoCurrencyCode: string;

    /**
     * The method associated with the payout.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "method" })
    method: string;

    /**
     * The schedule associated with the payout.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "schedule" })
    schedule: PayoutSchedule;

    /**
     * The status associated with the payout.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status: PayoutStatus;

    /**
     * An array of [Transactions](/rest/version/transactions) linked to the payout.
     */
    @SpeakeasyMetadata({ elemType: OrderTransaction })
    @Expose({ name: "transactions" })
    @Type(() => OrderTransaction)
    transactions: OrderTransaction[];

    /**
     * The type associated with the payout.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type: PayoutType;

    /**
     * The [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) timestamp that the payout was last updated.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "updated_at" })
    updatedAt: string;
}
