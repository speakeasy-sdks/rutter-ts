/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Zohobooks only: The place of supply is where the expense is considered to have occurred for VAT purposes. For items, it is the location of the items when the expense occurs. For services, it is where the vendor is established.
 */
export enum CreateExpenseAdditionalFieldsPlaceOfSupply {
    AbuDhabi = "abu_dhabi",
    Ajman = "ajman",
    Dubai = "dubai",
    Fujairah = "fujairah",
    RasAlKhaimah = "ras_al_khaimah",
    Sharjah = "sharjah",
    UmmAlQuwain = "umm_al_quwain",
    UnitedArabEmirates = "united_arab_emirates",
    SaudiArabia = "saudi_arabia",
    Bahrain = "bahrain",
    Kuwait = "kuwait",
    Oman = "oman",
    Qatar = "qatar",
}

/**
 * Zohobooks only: VAT treatment for the expense.
 */
export enum CreateExpenseAdditionalFieldsTaxTreatment {
    VatRegistered = "vat_registered",
    VatNotRegistered = "vat_not_registered",
    GccVatNotRegistered = "gcc_vat_not_registered",
    GccVatRegistered = "gcc_vat_registered",
    NonGcc = "non_gcc",
    DzVatRegistered = "dz_vat_registered",
    DzVatNotRegistered = "dz_vat_not_registered",
}

/**
 * Additional fields required only for a narrow set of use cases.
 */
export class CreateExpenseAdditionalFields extends SpeakeasyBase {
    /**
     * Zohobooks only: The place of supply is where the expense is considered to have occurred for VAT purposes. For items, it is the location of the items when the expense occurs. For services, it is where the vendor is established.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "place_of_supply" })
    placeOfSupply?: CreateExpenseAdditionalFieldsPlaceOfSupply;

    /**
     * Zohobooks only: Specifies if the total amount of the expense includes the applicable taxes, or if it is exclusive of taxes.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "tax_inclusive" })
    taxInclusive?: boolean;

    /**
     * Zohobooks only: VAT treatment for the expense.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "tax_treatment" })
    taxTreatment?: CreateExpenseAdditionalFieldsTaxTreatment;
}

/**
 * The [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) currency code of the expense.
 */
export enum CreateExpenseCurrencyCode {
    Aed = "AED",
    Afn = "AFN",
    All = "ALL",
    Amd = "AMD",
    Ang = "ANG",
    Aoa = "AOA",
    Ars = "ARS",
    Aud = "AUD",
    Awg = "AWG",
    Azn = "AZN",
    Bam = "BAM",
    Bbd = "BBD",
    Bdt = "BDT",
    Bgn = "BGN",
    Bhd = "BHD",
    Bif = "BIF",
    Bmd = "BMD",
    Bnd = "BND",
    Bob = "BOB",
    Bov = "BOV",
    Brl = "BRL",
    Bsd = "BSD",
    Btn = "BTN",
    Bwp = "BWP",
    Byr = "BYR",
    Bzd = "BZD",
    Cad = "CAD",
    Cdf = "CDF",
    Che = "CHE",
    Chf = "CHF",
    Chw = "CHW",
    Clf = "CLF",
    Clp = "CLP",
    Cny = "CNY",
    Cop = "COP",
    Cou = "COU",
    Crc = "CRC",
    Cuc = "CUC",
    Cup = "CUP",
    Cve = "CVE",
    Czk = "CZK",
    Djf = "DJF",
    Dkk = "DKK",
    Dop = "DOP",
    Dzd = "DZD",
    Egp = "EGP",
    Ern = "ERN",
    Etb = "ETB",
    Eur = "EUR",
    Fjd = "FJD",
    Fkp = "FKP",
    Gbp = "GBP",
    Gel = "GEL",
    Ghs = "GHS",
    Gip = "GIP",
    Gmd = "GMD",
    Gnf = "GNF",
    Gtq = "GTQ",
    Gyd = "GYD",
    Hkd = "HKD",
    Hnl = "HNL",
    Hrk = "HRK",
    Htg = "HTG",
    Huf = "HUF",
    Idr = "IDR",
    Ils = "ILS",
    Inr = "INR",
    Iqd = "IQD",
    Irr = "IRR",
    Isk = "ISK",
    Jmd = "JMD",
    Jod = "JOD",
    Jpy = "JPY",
    Kes = "KES",
    Kgs = "KGS",
    Khr = "KHR",
    Kmf = "KMF",
    Kpw = "KPW",
    Krw = "KRW",
    Kwd = "KWD",
    Kyd = "KYD",
    Kzt = "KZT",
    Lak = "LAK",
    Lbp = "LBP",
    Lkr = "LKR",
    Lrd = "LRD",
    Lsl = "LSL",
    Ltl = "LTL",
    Lvl = "LVL",
    Lyd = "LYD",
    Mad = "MAD",
    Mdl = "MDL",
    Mga = "MGA",
    Mkd = "MKD",
    Mmk = "MMK",
    Mnt = "MNT",
    Mop = "MOP",
    Mro = "MRO",
    Mur = "MUR",
    Mvr = "MVR",
    Mwk = "MWK",
    Mxn = "MXN",
    Mxv = "MXV",
    Myr = "MYR",
    Mzn = "MZN",
    Nad = "NAD",
    Ngn = "NGN",
    Nio = "NIO",
    Nok = "NOK",
    Npr = "NPR",
    Nzd = "NZD",
    Omr = "OMR",
    Pab = "PAB",
    Pen = "PEN",
    Pgk = "PGK",
    Php = "PHP",
    Pkr = "PKR",
    Pln = "PLN",
    Pyg = "PYG",
    Qar = "QAR",
    Ron = "RON",
    Rsd = "RSD",
    Rub = "RUB",
    Rwf = "RWF",
    Sar = "SAR",
    Sbd = "SBD",
    Scr = "SCR",
    Sdg = "SDG",
    Sek = "SEK",
    Sgd = "SGD",
    Shp = "SHP",
    Sll = "SLL",
    Sos = "SOS",
    Srd = "SRD",
    Ssp = "SSP",
    Std = "STD",
    Syp = "SYP",
    Szl = "SZL",
    Thb = "THB",
    Tjs = "TJS",
    Tmt = "TMT",
    Tnd = "TND",
    Top = "TOP",
    Try = "TRY",
    Ttd = "TTD",
    Twd = "TWD",
    Tzs = "TZS",
    Uah = "UAH",
    Ugx = "UGX",
    Usd = "USD",
    Usn = "USN",
    Uss = "USS",
    Uyi = "UYI",
    Uyu = "UYU",
    Uzs = "UZS",
    Vef = "VEF",
    Vnd = "VND",
    Vuv = "VUV",
    Wst = "WST",
    Xaf = "XAF",
    Xag = "XAG",
    Xau = "XAU",
    Xba = "XBA",
    Xbb = "XBB",
    Xbc = "XBC",
    Xbd = "XBD",
    Xcd = "XCD",
    Xdr = "XDR",
    Xfu = "XFU",
    Xof = "XOF",
    Xpd = "XPD",
    Xpf = "XPF",
    Xpt = "XPT",
    Xts = "XTS",
    Xxx = "XXX",
    Yer = "YER",
    Zar = "ZAR",
    Zmw = "ZMW",
}

/**
 * The type of expense.
 */
export enum CreateExpenseExpenseType {
    Expense = "expense",
    Refund = "refund",
}

export class CreateExpenseLineItems extends SpeakeasyBase {
    /**
     * The Rutter ID of the expense [Account](/rest/version/accounts) linked to the expense. Represents the account being debited.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "account_id" })
    accountId: string;

    /**
     * The Rutter ID of the [Class](/rest/version/classes) linked to the expense line item.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "class_id" })
    classId?: string;

    /**
     * The Rutter ID of the [Customer](/rest/version/customers) linked to the expense line item. Providing a value here will mark the expense as billable.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "customer_id" })
    customerId?: string;

    /**
     * The Rutter ID of the [Department](/rest/version/departments) linked to the expense line item.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "department_id" })
    departmentId?: string;

    /**
     * The description of the expense line item.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    /**
     * The Rutter ID of the [Location](/rest/version/locations) linked to the expense line item.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "location_id" })
    locationId?: string;

    /**
     * The Rutter ID of the [Tax Rate](/rest/version/taxrates) linked to the expense line item.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "tax_rate_id" })
    taxRateId?: string;

    /**
     * The amount of the expense line item.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "total_amount" })
    totalAmount: number;
}

export class CreateExpense extends SpeakeasyBase {
    /**
     * The Rutter ID of the [Account](/rest/version/accounts) linked to the expense. Represents the account being credited.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "account_id" })
    accountId: string;

    /**
     * Additional fields required only for a narrow set of use cases.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "additional_fields" })
    @Type(() => CreateExpenseAdditionalFields)
    additionalFields?: CreateExpenseAdditionalFields;

    /**
     * The [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) currency code of the expense.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "currency_code" })
    currencyCode: CreateExpenseCurrencyCode;

    /**
     * The exchange rate between the currency of the expense and the business default currency
     */
    @SpeakeasyMetadata()
    @Expose({ name: "currency_rate" })
    currencyRate?: number;

    /**
     * The type of expense.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "expense_type" })
    expenseType: CreateExpenseExpenseType;

    /**
     * An array of line items associated with the expense or expense refund.
     */
    @SpeakeasyMetadata({ elemType: CreateExpenseLineItems })
    @Expose({ name: "line_items" })
    @Type(() => CreateExpenseLineItems)
    lineItems: CreateExpenseLineItems[];

    /**
     * The memo of the expense.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "memo" })
    memo?: string;

    /**
     * The Rutter ID of the [Subsidiary](/rest/version/subsidiaries) linked to the expense. This feature is currently only supported on NetSuite.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "subsidiary_id" })
    subsidiaryId?: string;

    /**
     * The [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) timestamp that the expense was created.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "transaction_date" })
    transactionDate?: string;

    /**
     * The Rutter ID of the [Vendor](/rest/version/vendors) linked to the expense.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "vendor_id" })
    vendorId?: string;
}
