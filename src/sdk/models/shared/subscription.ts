/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SubscriptionItem } from "./subscriptionitem";
import { Expose, Type } from "class-transformer";

/**
 * Status of subscription. Possible values are: `active`, `in_trial`, `canceled`, `paused`, `unknown`
 */
export enum SubscriptionStatus {
    Active = "active",
    InTrial = "in_trial",
    Canceled = "canceled",
    Paused = "paused",
    Unknown = "unknown",
}

export class Subscription extends SpeakeasyBase {
    /**
     * The [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) timestamp that the subscription was created.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    createdAt: string;

    /**
     * The Rutter generated unique ID of the subscription.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    /**
     * The [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) currency code of the subscription.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "iso_currency_code" })
    isoCurrencyCode: string;

    @SpeakeasyMetadata({ elemType: SubscriptionItem })
    @Expose({ name: "items" })
    @Type(() => SubscriptionItem)
    items?: SubscriptionItem[];

    @SpeakeasyMetadata()
    @Expose({ name: "platform_customer_id" })
    platformCustomerId?: string;

    /**
     * The platform specific ID of the subscription.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "platform_id" })
    platformId: string;

    /**
     * Status of subscription. Possible values are: `active`, `in_trial`, `canceled`, `paused`, `unknown`
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status: SubscriptionStatus;

    /**
     * The [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) timestamp that the subscription was last updated.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "updated_at" })
    updatedAt: string;
}
