/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Platform } from "./platform";
import { Expose, Type } from "class-transformer";

export class GetAccessTokenConnectionResponseConnection extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    createdAt?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "disabled" })
    disabled: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "estimated_completed_at" })
    estimatedCompletedAt?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    @SpeakeasyMetadata()
    @Expose({ name: "initial_orders_synced_count" })
    initialOrdersSyncedCount?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "last_sync_completed_at" })
    lastSyncCompletedAt?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "last_sync_started_at" })
    lastSyncStartedAt?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "link_url" })
    linkUrl: string;

    @SpeakeasyMetadata()
    @Expose({ name: "needs_update" })
    needsUpdate: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "newest_order_date" })
    newestOrderDate?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "oldest_order_date" })
    oldestOrderDate?: string;

    /**
     * The underlying platform.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "platform" })
    platform: Platform;

    @SpeakeasyMetadata()
    @Expose({ name: "store_domain" })
    storeDomain: string;

    @SpeakeasyMetadata()
    @Expose({ name: "store_name" })
    storeName: string;

    @SpeakeasyMetadata()
    @Expose({ name: "store_unique_id" })
    storeUniqueId: string;
}

export class GetAccessTokenConnectionResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "connection" })
    @Type(() => GetAccessTokenConnectionResponseConnection)
    connection: GetAccessTokenConnectionResponseConnection;
}
