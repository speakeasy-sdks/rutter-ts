/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CreateConnectionPlatforms } from "./createconnectionplatforms";
import { Expose } from "class-transformer";

/**
 * Region of Amazon seller - must be one of na (North America), eu (Europe), or fe (Far East).
 */
export enum AmazonCredentialsAmazonSellerRegion {
    Na = "na",
    Eu = "eu",
    Fe = "fe",
}

/**
 * Credentials for Amazon
 */
export class AmazonCredentials extends SpeakeasyBase {
    /**
     * AWS User Access Key ID
     */
    @SpeakeasyMetadata()
    @Expose({ name: "amazon_access_key_id" })
    amazonAccessKeyId: string;

    /**
     * AWS User Secret Access Key
     */
    @SpeakeasyMetadata()
    @Expose({ name: "amazon_secret_access_key" })
    amazonSecretAccessKey: string;

    /**
     * Region of Amazon seller - must be one of na (North America), eu (Europe), or fe (Far East).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "amazon_seller_region" })
    amazonSellerRegion: AmazonCredentialsAmazonSellerRegion;

    /**
     * AWS Role ARN used in SP-API app
     */
    @SpeakeasyMetadata()
    @Expose({ name: "amazon_selling_partner_role" })
    amazonSellingPartnerRole: string;

    /**
     * SP-API App Client ID
     */
    @SpeakeasyMetadata()
    @Expose({ name: "oauth_client_id" })
    oauthClientId: string;

    /**
     * SP-API App Client Secret
     */
    @SpeakeasyMetadata()
    @Expose({ name: "oauth_client_secret" })
    oauthClientSecret: string;

    /**
     * SP-API Refresh Token
     */
    @SpeakeasyMetadata()
    @Expose({ name: "oauth_refresh_token" })
    oauthRefreshToken: string;

    /**
     * The underlying platform.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "platform" })
    platform: CreateConnectionPlatforms;

    @SpeakeasyMetadata()
    @Expose({ name: "scope" })
    scope?: string;
}
