/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { objectToClass, SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export enum GetConnectionStatusResponseConnectionPlatform {
    Shoper = "SHOPER",
    Shopify = "SHOPIFY",
    Shopware = "SHOPWARE",
    Magento = "MAGENTO",
    BigCommerce = "BIG_COMMERCE",
    WooCommerce = "WOO_COMMERCE",
    Squarespace = "SQUARESPACE",
    Wix = "WIX",
    Square = "SQUARE",
    Commercelayer = "COMMERCELAYER",
    Amazon = "AMAZON",
    Etsy = "ETSY",
    Ebay = "EBAY",
    Prestashop = "PRESTASHOP",
    Webflow = "WEBFLOW",
    Lazada = "LAZADA",
    Fnac = "FNAC",
    Alibaba = "ALIBABA",
    Shopee = "SHOPEE",
    Mercadolibre = "MERCADOLIBRE",
    Gumroad = "GUMROAD",
    Shoplazza = "SHOPLAZZA",
    Shopline = "SHOPLINE",
    Walmart = "WALMART",
    Stripe = "STRIPE",
    Mollie = "MOLLIE",
    Clover = "CLOVER",
    Paypal = "PAYPAL",
    Quickbooks = "QUICKBOOKS",
    QuickbooksDesktop = "QUICKBOOKS_DESKTOP",
    Ecwid = "ECWID",
    Xero = "XERO",
    Freshbooks = "FRESHBOOKS",
    Netsuite = "NETSUITE",
    SageBusinessCloud = "SAGE_BUSINESS_CLOUD",
    SageIntacct = "SAGE_INTACCT",
    Zohobooks = "ZOHOBOOKS",
    Wave = "WAVE",
    Dynamics365 = "DYNAMICS365",
    Exactonline = "EXACTONLINE",
    Kashflow = "KASHFLOW",
    Freeagent = "FREEAGENT",
    Chargify = "CHARGIFY",
    Chargebee = "CHARGEBEE",
    Recurly = "RECURLY",
    Plaid = "PLAID",
}

export class GetConnectionStatusResponseConnection extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    @SpeakeasyMetadata()
    @Expose({ name: "orgId" })
    orgId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "platform" })
    platform: GetConnectionStatusResponseConnectionPlatform;
}

export enum GetConnectionStatusResponseStatusDisabledStatusDisabledReason {
    ShopApiKeyExpired = "SHOP_API_KEY_EXPIRED",
    ShopNotFound = "SHOP_NOT_FOUND",
    ShopIdIsInvalid = "SHOP_ID_IS_INVALID",
    ShopIsDisabledOrExpired = "SHOP_IS_DISABLED_OR_EXPIRED",
    ShopIsLocked = "SHOP_IS_LOCKED",
    ShopPaymentRequired = "SHOP_PAYMENT_REQUIRED",
    TunnelError = "TUNNEL_ERROR",
    WebServiceIsDisabled = "WEB_SERVICE_IS_DISABLED",
    ShopIsUnavailable = "SHOP_IS_UNAVAILABLE",
    CertExpired = "CERT_EXPIRED",
    FailedToAuthenticate = "FAILED TO AUTHENTICATE",
    NeedsReauth = "NEEDS_REAUTH",
    RequestTimeout = "REQUEST_TIMEOUT",
    ManuallyDisabled = "MANUALLY_DISABLED",
    Unknown = "UNKNOWN",
}

export class GetConnectionStatusResponseStatusDisabledStatus extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "disabled_reason" })
    disabledReason: GetConnectionStatusResponseStatusDisabledStatusDisabledReason;

    @SpeakeasyMetadata()
    @Expose({ name: "is_disabled" })
    isDisabled: boolean;
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesAccounts {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesBalanceSheets {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesCompanyInfo {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesCustomers {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesIncomeStatements {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesInvoices {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesItems {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders2 {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1BillingAddress {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1CreatedAt {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1Customer {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1FulfillmentStatus {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1Fulfillments {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1IsoCurrencyCode {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1LineItems {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1OrderNumber {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1PaymentStatus {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1PlatformId {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1Refunds {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1ShippingAddress {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1Status {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1TotalDiscount {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1TotalPrice {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1TotalShipping {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1TotalTax {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1Transactions {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1UpdatedAt {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export class GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1 extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "billing_address" })
    billingAddress?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1BillingAddress;

    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    createdAt?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1CreatedAt;

    @SpeakeasyMetadata()
    @Expose({ name: "customer" })
    customer?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1Customer;

    @SpeakeasyMetadata()
    @Expose({ name: "fulfillment_status" })
    fulfillmentStatus?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1FulfillmentStatus;

    @SpeakeasyMetadata()
    @Expose({ name: "fulfillments" })
    fulfillments?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1Fulfillments;

    @SpeakeasyMetadata()
    @Expose({ name: "iso_currency_code" })
    isoCurrencyCode?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1IsoCurrencyCode;

    @SpeakeasyMetadata()
    @Expose({ name: "line_items" })
    lineItems?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1LineItems;

    @SpeakeasyMetadata()
    @Expose({ name: "order_number" })
    orderNumber?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1OrderNumber;

    @SpeakeasyMetadata()
    @Expose({ name: "payment_status" })
    paymentStatus?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1PaymentStatus;

    @SpeakeasyMetadata()
    @Expose({ name: "platform_id" })
    platformId?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1PlatformId;

    @SpeakeasyMetadata()
    @Expose({ name: "refunds" })
    refunds?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1Refunds;

    @SpeakeasyMetadata()
    @Expose({ name: "shipping_address" })
    shippingAddress?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1ShippingAddress;

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1Status;

    @SpeakeasyMetadata()
    @Expose({ name: "total_discount" })
    totalDiscount?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1TotalDiscount;

    @SpeakeasyMetadata()
    @Expose({ name: "total_price" })
    totalPrice?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1TotalPrice;

    @SpeakeasyMetadata()
    @Expose({ name: "total_shipping" })
    totalShipping?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1TotalShipping;

    @SpeakeasyMetadata()
    @Expose({ name: "total_tax" })
    totalTax?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1TotalTax;

    @SpeakeasyMetadata()
    @Expose({ name: "transactions" })
    transactions?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1Transactions;

    @SpeakeasyMetadata()
    @Expose({ name: "updated_at" })
    updatedAt?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesOrders1UpdatedAt;
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesPayouts {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesProducts2 {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesProducts1VariantsInventory {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export class GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesProducts1Variants extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "inventory" })
    inventory?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesProducts1VariantsInventory;
}

export class GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesProducts1 extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "variants" })
    @Type(
        () =>
            GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesProducts1Variants
    )
    variants: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesProducts1Variants;
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesPurchaseOrders {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesStore {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesTransactions {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesVendors {
    Required = "REQUIRED",
    PreferredButOptional = "PREFERRED_BUT_OPTIONAL",
    Avoid = "AVOID",
}

export class GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntities extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "accounts" })
    accounts?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesAccounts;

    @SpeakeasyMetadata()
    @Expose({ name: "balanceSheets" })
    balanceSheets?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesBalanceSheets;

    @SpeakeasyMetadata()
    @Expose({ name: "companyInfo" })
    companyInfo?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesCompanyInfo;

    @SpeakeasyMetadata()
    @Expose({ name: "customers" })
    customers?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesCustomers;

    @SpeakeasyMetadata()
    @Expose({ name: "incomeStatements" })
    incomeStatements?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesIncomeStatements;

    @SpeakeasyMetadata()
    @Expose({ name: "invoices" })
    invoices?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesInvoices;

    @SpeakeasyMetadata()
    @Expose({ name: "items" })
    items?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesItems;

    @SpeakeasyMetadata()
    @Expose({ name: "orders" })
    orders?: any;

    @SpeakeasyMetadata()
    @Expose({ name: "payouts" })
    payouts?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesPayouts;

    @SpeakeasyMetadata()
    @Expose({ name: "products" })
    products?: any;

    @SpeakeasyMetadata()
    @Expose({ name: "purchaseOrders" })
    purchaseOrders?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesPurchaseOrders;

    @SpeakeasyMetadata()
    @Expose({ name: "store" })
    store?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesStore;

    @SpeakeasyMetadata()
    @Expose({ name: "transactions" })
    transactions?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesTransactions;

    @SpeakeasyMetadata()
    @Expose({ name: "vendors" })
    vendors?: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntitiesVendors;
}

export class GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfig extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "entities" })
    @Type(() => GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntities)
    entities: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfigEntities;

    @SpeakeasyMetadata()
    @Expose({ name: "timeFrameInMonths" })
    timeFrameInMonths: number;
}

export enum GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesProgressInfoStatus {
    InProgress = "IN_PROGRESS",
    Completed = "COMPLETED",
    NotStarted = "NOT_STARTED",
    Failed = "FAILED",
}

export class GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesProgressInfo extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "newest_batch_entity_date" })
    newestBatchEntityDate: string;

    @SpeakeasyMetadata()
    @Expose({ name: "oldest_batch_entity_date" })
    oldestBatchEntityDate: string;

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesProgressInfoStatus;
}

export class GetConnectionStatusResponseStatusHistoricalSyncStatusBatches extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "batch_num" })
    batchNum: number;

    @SpeakeasyMetadata()
    @Expose({ name: "config" })
    @Type(() => GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfig)
    config: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesConfig;

    @SpeakeasyMetadata({
        elemType: GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesProgressInfo,
    })
    @Expose({ name: "progress_info" })
    @Transform(
        ({ value }) => {
            const obj: Record<
                string,
                GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesProgressInfo
            > = {};
            for (const key in value) {
                obj[key] = objectToClass(
                    value[key],
                    GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesProgressInfo
                );
            }
            return obj;
        },
        { toClassOnly: true }
    )
    progressInfo: Record<
        string,
        GetConnectionStatusResponseStatusHistoricalSyncStatusBatchesProgressInfo
    >;
}

export class GetConnectionStatusResponseStatusHistoricalSyncStatusTotal extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "newest_entity_date" })
    newestEntityDate: string;

    @SpeakeasyMetadata()
    @Expose({ name: "oldest_entity_date" })
    oldestEntityDate: string;

    @SpeakeasyMetadata()
    @Expose({ name: "ready" })
    ready: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "synced_count" })
    syncedCount: number;
}

export class GetConnectionStatusResponseStatusHistoricalSyncStatus extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: GetConnectionStatusResponseStatusHistoricalSyncStatusBatches })
    @Expose({ name: "batches" })
    @Type(() => GetConnectionStatusResponseStatusHistoricalSyncStatusBatches)
    batches: GetConnectionStatusResponseStatusHistoricalSyncStatusBatches[];

    @SpeakeasyMetadata()
    @Expose({ name: "historical_sync_completed" })
    historicalSyncCompleted: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "num_batches_completed" })
    numBatchesCompleted: number;

    @SpeakeasyMetadata()
    @Expose({ name: "synced_balance_sheets_count" })
    syncedBalanceSheetsCount: number;

    @SpeakeasyMetadata()
    @Expose({ name: "synced_cash_flows_count" })
    syncedCashFlowsCount: number;

    @SpeakeasyMetadata()
    @Expose({ name: "synced_income_statements_count" })
    syncedIncomeStatementsCount: number;

    @SpeakeasyMetadata()
    @Expose({ name: "synced_orders_count" })
    syncedOrdersCount: number;

    @SpeakeasyMetadata()
    @Expose({ name: "synced_transactions_count" })
    syncedTransactionsCount: number;

    @SpeakeasyMetadata({ elemType: GetConnectionStatusResponseStatusHistoricalSyncStatusTotal })
    @Expose({ name: "total" })
    @Transform(
        ({ value }) => {
            const obj: Record<string, GetConnectionStatusResponseStatusHistoricalSyncStatusTotal> =
                {};
            for (const key in value) {
                obj[key] = objectToClass(
                    value[key],
                    GetConnectionStatusResponseStatusHistoricalSyncStatusTotal
                );
            }
            return obj;
        },
        { toClassOnly: true }
    )
    total: Record<string, GetConnectionStatusResponseStatusHistoricalSyncStatusTotal>;
}

export class GetConnectionStatusResponseStatusNeedsUpdateStatus extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "needs_update" })
    needsUpdate: boolean;
}

export class GetConnectionStatusResponseStatus extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    createdAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "disabled_status" })
    @Type(() => GetConnectionStatusResponseStatusDisabledStatus)
    disabledStatus: GetConnectionStatusResponseStatusDisabledStatus;

    @SpeakeasyMetadata()
    @Expose({ name: "historical_sync_status" })
    @Type(() => GetConnectionStatusResponseStatusHistoricalSyncStatus)
    historicalSyncStatus: GetConnectionStatusResponseStatusHistoricalSyncStatus;

    @SpeakeasyMetadata()
    @Expose({ name: "is_ready" })
    isReady: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "last_sync_completed_at" })
    lastSyncCompletedAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "link_url" })
    linkUrl: string;

    @SpeakeasyMetadata()
    @Expose({ name: "needs_update_status" })
    @Type(() => GetConnectionStatusResponseStatusNeedsUpdateStatus)
    needsUpdateStatus: GetConnectionStatusResponseStatusNeedsUpdateStatus;

    @SpeakeasyMetadata()
    @Expose({ name: "platform" })
    platform: string;
}

export class GetConnectionStatusResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "connection" })
    @Type(() => GetConnectionStatusResponseConnection)
    connection: GetConnectionStatusResponseConnection;

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    @Type(() => GetConnectionStatusResponseStatus)
    status: GetConnectionStatusResponseStatus;
}
