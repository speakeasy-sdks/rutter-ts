/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ListPayoutsRequest extends SpeakeasyBase {
    /**
     * The access token of the connection.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=access_token" })
    accessToken: string;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=arrival_at_max" })
    arrivalAtMax?: string;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=arrival_at_min" })
    arrivalAtMin?: string;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=created_at_max" })
    createdAtMax?: string;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=created_at_min" })
    createdAtMin?: string;

    /**
     * Force a response even if the underlying connection hasn't finished the initial sync.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=force_fetch" })
    forceFetch?: shared.ForceFetch;
}

export class ListPayoutsResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    listPayoutsResponse?: shared.ListPayoutsResponse;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;
}
